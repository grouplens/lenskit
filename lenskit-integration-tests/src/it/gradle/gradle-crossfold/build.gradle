buildscript {
    repositories {
        maven {
            url "$project.testRepoURI"
        }
        mavenCentral()
    }
    dependencies {
        classpath 'org.hamcrest:hamcrest-library:1.3'
        classpath "org.grouplens.lenskit:lenskit-gradle:$project.lenskitVersion"
    }
}

import org.lenskit.gradle.*
import static org.hamcrest.MatcherAssert.*
import static org.hamcrest.Matchers.*

apply plugin: 'java'
apply from: 'common.gradle'
apply plugin: 'lenskit'

task crossfold(type: Crossfold) {
    input textFile {
        file ratingsFile
        delimiter "\t"
    }
    outputFormat "PACK"
    includeTimestamps false
}

check {
    dependsOn crossfold
    doLast {
        def dir = file("$buildDir/crossfold.out")
        assertThat dir.exists(), equalTo(true)
        assertThat "all-partitions exists", file("$dir/all-partitions.json").exists()
        for (int i = 1; i <= 5; i++) {
            assertThat "spec file $i exists", file(String.format("$dir/part%02d.json", i)).exists()
            assertThat "train file $i exists", file(String.format("$dir/part%02d.train.pack", i)).exists()
            assertThat "test file $i exists", file(String.format("$dir/part%02d.test.pack", i)).exists()
        }
    }
}
